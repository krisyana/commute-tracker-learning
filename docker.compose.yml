version: '3.8'

services:
  # Backend FastAPI service
  backend:
    build: 
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: commute-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/commute_tracker
      - REDIS_URL=redis://redis:6379
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./apps/backend:/app
      - backend_cache:/app/.cache
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - commute-network
    restart: unless-stopped

  # Frontend React service
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: commute-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - CHOKIDAR_USEPOLLING=true  # For file watching in Docker
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - frontend_cache:/app/.cache
    command: npm run dev -- --host 0.0.0.0
    networks:
      - commute-network
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:16
    container_name: commute-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: commute_tracker
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d commute_tracker"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - commute-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: commute-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass "redis-password"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis-password", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - commute-network
    restart: unless-stopped

  # pgAdmin for database management (optional - use profile)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: commute-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@commute-tracker.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - commute-network
    profiles:
      - tools
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_cache:
    driver: local
  frontend_cache:
    driver: local

networks:
  commute-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16